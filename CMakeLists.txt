# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(mumblebot)

set(VCPKG_TARGET_TRIPLET x64-linux)
set(MUMLIB2_BUILD_SHARED_LIBS OFF)
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

if(CMKR_ROOT_PROJECT AND NOT CMKR_DISABLE_VCPKG)
	include(FetchContent)
	# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
	if(POLICY CMP0135)
		cmake_policy(SET CMP0135 NEW)
	endif()
	message(STATUS "Fetching vcpkg (2024.02.14)...")
	FetchContent_Declare(vcpkg URL "https://github.com/microsoft/vcpkg/archive/refs/tags/2024.02.14.tar.gz")
	FetchContent_GetProperties(vcpkg)
	if(NOT vcpkg_POPULATED)
		FetchContent_Populate(vcpkg)
		include("${vcpkg_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake")
	endif()
endif()

include(FetchContent)

message(STATUS "Fetching mumlib2 (b7b0adec3e3025c8e4633624d97528bdb737a179)...")
FetchContent_Declare(mumlib2
	GIT_REPOSITORY
		"https://github.com/lilac1337/mumlib2.git"
	GIT_TAG
		b7b0adec3e3025c8e4633624d97528bdb737a179
)
FetchContent_MakeAvailable(mumlib2)

# Packages
find_package(OpenSSL REQUIRED)

find_package(asio REQUIRED)

find_package(protobuf REQUIRED)

find_package(Opus REQUIRED)

find_package(fmt REQUIRED)

find_package(spdlog REQUIRED)

find_package(SQLiteCpp REQUIRED)

# Target: mumblebot
set(mumblebot_SOURCES
	"src/bot.cxx"
	"src/callback.cxx"
	"src/config.cxx"
	"src/main.cxx"
	"src/bot.hxx"
	"src/callback.hxx"
	"src/config.hxx"
	cmake.toml
)

add_executable(mumblebot)

target_sources(mumblebot PRIVATE ${mumblebot_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${mumblebot_SOURCES})

target_compile_features(mumblebot PRIVATE
	cxx_std_23
)

target_include_directories(mumblebot PRIVATE
	src
)

target_link_libraries(mumblebot PRIVATE
	OpenSSL::SSL
	OpenSSL::Crypto
	asio
	opus
	mumlib2
	spdlog
	fmt
	sqlite3
	SQLiteCpp
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT mumblebot)
endif()
